name: Multi-Platform Build

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]
  workflow_dispatch:

jobs:
  build-windows:
    runs-on: windows-latest
    steps:
    - uses: actions/checkout@v3
    
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.8'
    
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
        pip install pyinstaller
    
    - name: Build Windows exe
      run: |
        pyinstaller --onefile --noconsole --name "ReservationSystem" --icon="pictures/karakal_logo_grey.ico" --add-data="assets;assets" --add-data="pictures;pictures" main.py
    
    - name: Upload Windows artifact
      uses: actions/upload-artifact@v4
      with:
        name: ReservationSystem-Windows
        path: dist/ReservationSystem.exe

  build-macos:
    runs-on: macos-latest
    steps:
    - uses: actions/checkout@v3
    
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.8'
    
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
        pip install pyinstaller
    
    - name: Create icns icon
      run: |
        mkdir tmp.iconset
        sips -z 16 16 pictures/karakal_logo_grey.png --out tmp.iconset/icon_16x16.png
        sips -z 32 32 pictures/karakal_logo_grey.png --out tmp.iconset/icon_32x32.png
        sips -z 128 128 pictures/karakal_logo_grey.png --out tmp.iconset/icon_128x128.png
        sips -z 256 256 pictures/karakal_logo_grey.png --out tmp.iconset/icon_256x256.png
        sips -z 512 512 pictures/karakal_logo_grey.png --out tmp.iconset/icon_512x512.png
        iconutil -c icns tmp.iconset
        mv tmp.icns pictures/karakal_logo_grey.icns
    
    - name: Build macOS app
      run: |
        pyinstaller --onefile --windowed --name "ReservationSystem" --icon="pictures/karakal_logo_grey.icns" --add-data="assets:assets" --add-data="pictures:pictures" main.py
    
    - name: Upload macOS artifact
      uses: actions/upload-artifact@v4
      with:
        name: ReservationSystem-macOS
        path: dist/ReservationSystem.app

  build-linux:
    runs-on: ubuntu-20.04  # Starší Ubuntu pro lepší kompatibilitu
    steps:
    - uses: actions/checkout@v3
    
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.8'
    
    - name: Install system dependencies
      run: |
        sudo apt update
        sudo apt install -y libxcb-xinerama0 libxcb1 libx11-6 libxrandr2 libxss1 libxcursor1 libxdamage1 libxfixes3 libxcomposite1 libxi6 libxtst6 libgl1
    
    - name: Install Python dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
        pip install pyinstaller
    
    - name: Build Linux binary
      run: |
        pyinstaller --onefile --name "ReservationSystem" --add-data="assets:assets" --add-data="pictures:pictures" main.py
    
    - name: Build AppImage (better compatibility)
      run: |
        # Download AppImageTool
        wget https://github.com/AppImage/AppImageKit/releases/download/continuous/appimagetool-x86_64.AppImage
        chmod +x appimagetool-x86_64.AppImage
        
        # Create AppDir structure
        mkdir -p ReservationSystem.AppDir/usr/bin
        mkdir -p ReservationSystem.AppDir/usr/share/applications
        mkdir -p ReservationSystem.AppDir/usr/share/icons/hicolor/256x256/apps
        
        # Copy binary and icon
        cp dist/ReservationSystem ReservationSystem.AppDir/usr/bin/
        cp pictures/karakal_logo_grey.png ReservationSystem.AppDir/usr/share/icons/hicolor/256x256/apps/ReservationSystem.png
        
        # Create desktop file
        cat > ReservationSystem.AppDir/ReservationSystem.desktop << 'EOF'
        [Desktop Entry]
        Type=Application
        Name=Reservation System
        Exec=ReservationSystem
        Icon=ReservationSystem
        Categories=Office;Database;
        Comment=Veterinary Reservation System
        EOF
        
        # Create AppRun
        cat > ReservationSystem.AppDir/AppRun << 'EOF'
        #!/bin/bash
        SELF=$(readlink -f "$0")
        HERE=${SELF%/*}
        exec "${HERE}/usr/bin/ReservationSystem" "$@"
        EOF
        chmod +x ReservationSystem.AppDir/AppRun
        
        # Build AppImage
        ./appimagetool-x86_64.AppImage ReservationSystem.AppDir ReservationSystem-x86_64.AppImage
    
    - name: Upload Linux binary
      uses: actions/upload-artifact@v4
      with:
        name: ReservationSystem-Linux-Binary
        path: dist/ReservationSystem
    
    - name: Upload Linux AppImage
      uses: actions/upload-artifact@v4
      with:
        name: ReservationSystem-Linux-AppImage
        path: ReservationSystem-x86_64.AppImage
